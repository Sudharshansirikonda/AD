# -*- coding: utf-8 -*-
"""Feature_scaling(AD).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dTWi3bk20vFxdPiPqUDFqpfgC2iH8e18
"""

from sklearn.preprocessing import MinMaxScaler
import numpy as np

# Example data
data = np.array([[1, 2], [3, 4], [5, 6]])

# Initialize the scaler
scaler = MinMaxScaler()

# Fit and transform the data
scaled_data = scaler.fit_transform(data)

print(scaled_data)

from sklearn.preprocessing import StandardScaler
import numpy as np

# Example data
data = np.array([[1, 2], [3, 4], [5, 6]])

# Initialize the scaler
scaler = StandardScaler()

# Fit and transform the data
scaled_data = scaler.fit_transform(data)

print(scaled_data)

from sklearn.preprocessing import StandardScaler
import numpy as np

# Example data (each row is an observation, each column is a feature)
data = np.array([[1, 2], [3, 4], [5, 6]])

# Initialize the StandardScaler
scaler = StandardScaler()

# Fit the scaler to the data and transform the data
scaled_data = scaler.fit_transform(data)

# Print the scaled data
print("Scaled Data:")
print(scaled_data)

# Get the mean and standard deviation of the transformed data
print("\nMean of transformed data (should be close to 0):")
print(np.mean(scaled_data, axis=0))

print("\nStandard deviation of transformed data (should be close to 1):")
print(np.std(scaled_data, axis=0))

